--Employee( emp_id, dept_idemp_name, DoJ, salary, commission,job_title)
Consider the schema given above for Write a PLSQL Program to
1. Create a Trigger to ensure the salary of the employee is not decreased.
2. Whenever the job title is changed for an employee write the following details into job_history table. Employee
ID, old job title, old department ID, DoJ for start date, system date for end date.

#############################

CREATE TABLE Employee (
  emp_id NUMBER PRIMARY KEY,
  dept_id NUMBER,
  emp_name VARCHAR2(50),
  DoJ DATE,
  salary NUMBER,
  commission NUMBER,
  job_title VARCHAR2(50)
);


-- Inserting sample data into the Employee table
INSERT INTO Employee (emp_id, dept_id, emp_name, DoJ, salary, commission, job_title) VALUES (1, 101, 'Tanvi', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 50000, 2000, 'Manager');
INSERT INTO Employee (emp_id, dept_id, emp_name, DoJ, salary, commission, job_title) VALUES (2, 102, 'Riya ', TO_DATE('2023-02-20', 'YYYY-MM-DD'), 45000, 1500, 'Developer');
INSERT INTO Employee (emp_id, dept_id, emp_name, DoJ, salary, commission, job_title) VALUES (3, 103, 'Milonee', TO_DATE('2023-03-10', 'YYYY-MM-DD'), 60000, 2500, 'Analyst');

-- Create the job_history table
CREATE TABLE job_history (
  emp_id INT,
  old_job_title VARCHAR(30),
  old_department_id INT,
  start_date DATE,
  end_date DATE
);

-- Insert sample data into the job_history table
INSERT INTO job_history (emp_id, old_job_title, old_department_id, start_date, end_date)
VALUES (1, 'Manager', 101, TO_DATE('2023-01-01', 'YYYY-MM-DD'), TO_DATE('2023-01-31', 'YYYY-MM-DD'));
INSERT INTO job_history (emp_id, old_job_title, old_department_id, start_date, end_date)
VALUES (2, 'Developer', 102, TO_DATE('2023-02-01', 'YYYY-MM-DD'), TO_DATE('2023-02-28', 'YYYY-MM-DD'));
INSERT INTO job_history (emp_id, old_job_title, old_department_id, start_date, end_date)
VALUES (3, 'Analyst', 103, TO_DATE('2023-03-01', 'YYYY-MM-DD'), TO_DATE('2023-03-31', 'YYYY-MM-DD'));
-- Add more job history records as needed

SELECT * FROM Employee

--Trigger to ensure the salary of the employee is not decreased:
CREATE OR REPLACE TRIGGER Salary_Not_Decreased
BEFORE UPDATE OF salary ON Employee
FOR EACH ROW
BEGIN
  IF :NEW.salary < :OLD.salary THEN
    RAISE_APPLICATION_ERROR(-20001, 'Salary cannot be decreased.');
  END IF;
END;


UPDATE Employee SET salary=90000 WHERE emp_id=2;
###########


CREATE OR REPLACE TRIGGER salary_decrement
BEFORE UPDATE OF job_title ON Employee
FOR EACH ROW
BEGIN
    INSERT INTO job_history VALUES (:OLD.emp_id, :OLD.job_title, :OLD.dept_id, :OLD.DoJ, SYSDATE);
END;



UPDATE Employee SET job_title = 'CEO' WHERE emp_id = 1;

SELECT * FROM job_history;